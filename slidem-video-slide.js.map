{"version":3,"names":[],"mappings":"","sources":["slidem-video-slide.js"],"sourcesContent":["import { GluonElement, html } from '../gluonjs/gluon.js';\nimport { SlidemSlideBase } from './slidem-slide-base.js';\n\nexport class SlidemVideoSlide extends SlidemSlideBase {\n  get template() {\n    this.content = html`\n      <video controls id=\"video\"></video>\n    `;\n\n    return html`\n      <style>\n        :host {\n          background: black;\n          color: white;\n        }\n\n        video {\n          width: 100%;\n          max-height: 100%;\n          max-width: 100%;\n        }\n      </style>\n      ${super.template}\n    `;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.$.video.src = this.getAttribute('video');\n    this.$.video.muted = this.getAttribute('muted') !== null;\n  }\n\n  static get observedAttributes() {\n    const attrs = super.observedAttributes || [];\n    Array.prototype.push.apply(attrs, ['active']);\n    return attrs;\n  }\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback(attr, oldVal, newVal);\n    if (attr === 'active') {\n      if (newVal !== null) {\n        this.$.video.currentTime = 0;\n        this.$.video.play();\n      } else {\n        this.$.video.pause();\n      }\n    }\n  }\n}\n\ncustomElements.define(SlidemVideoSlide.is, SlidemVideoSlide);\n"],"file":"slidem-video-slide.js"}