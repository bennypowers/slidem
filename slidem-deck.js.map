{"version":3,"names":[],"mappings":"","sources":["slidem-deck.js"],"sourcesContent":["import { GluonElement, html } from '../gluonjs/gluon.js';\nimport { onRouteChange, currentPath, currentHash } from '../gluon-router/gluon-router.js';\n\nimport '../fontfaceobserver/fontfaceobserver.standalone.js';\nimport '../gluon-keybinding/gluon-keybinding.js';\n\nconst styleText = document.createTextNode(`\n  /* SLIDEM GLOBAL STYLES */\n  body {\n    margin: 0;\n  }\n\n  [reveal] {\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n\n  slidem-deck > *:not([active]) {\n    display: none;\n  }\n\n  @keyframes slidem-fade-in {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes slidem-fade-out {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n\n  @keyframes slidem-slide-in-in {\n    from {\n      transform: translateX(100vw);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes slidem-slide-in-out {\n    from {\n      transform: translateX(0);\n    }\n    to {\n      transform: translateX(100vw);\n    }\n  }\n\n  @keyframes slidem-slide-out-in {\n    from {\n      transform: translateX(0);\n    }\n    to {\n      transform: translateX(-100vw);\n    }\n  }\n\n  @keyframes slidem-slide-out-out {\n    from {\n      transform: translateX(-100vw);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n`);\n\nconst styleNode = document.createElement('style');\nstyleNode.appendChild(styleText);\ndocument.head.appendChild(styleNode);\n\nexport class SlidemDeck extends GluonElement {\n  get template() {\n    return html`\n      <div class=\"slides\">\n        <slot id=\"slides\"></slot>\n      </div>\n      <div id=\"progress\"></div>\n      <div id=\"forward\">\n        <gluon-keybinding key=\"PageDown\"></gluon-keybinding>\n        <gluon-keybinding key=\"ArrowRight\"></gluon-keybinding>\n      </div>\n      <div id=\"backward\">\n        <gluon-keybinding key=\"PageUp\"></gluon-keybinding>\n        <gluon-keybinding key=\"ArrowLeft\"></gluon-keybinding>\n      </div>\n      <style>\n        :host {\n          display: block;\n          overflow: hidden;\n          position: absolute;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          font-family: 'sans-serif';\n          font-size: 56px;\n          line-height: 1;\n        }\n        .slides {\n          height: 100%;\n          width: 100%;\n        }\n        #progress {\n          position: absolute;\n          bottom: 0px;\n          left: 0;\n          right: 0;\n          height: 50px;\n          text-align: center;\n          display: flex;\n          flex-flow: row;\n          justify-content: center;\n          z-index: 10;\n        }\n        #progress div {\n          height: 8px;\n          width: 8px;\n          border-radius: 50%;\n          border: 2px solid white;\n          margin-left: 6px;\n          margin-right: 6px;\n          background: transparent;\n          transition: background 0.2s;\n        }\n        #progress div.active {\n          background: white;\n        }\n        :host([progress=\"none\"]) #progress {\n          display: none;\n        }\n\n        ::slotted(*) {\n          position: absolute;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n        }\n\n        ::slotted([active].animate-in) {\n          z-index: 2;\n        }\n        ::slotted([active].animate-out) {\n          z-index: 0;\n        }\n        ::slotted([slide-in]), ::slotted([slide-out]), ::slotted([fade-in]), ::slotted([fade-out]) {\n          animation-duration: 0.4s;\n          animation-fill-mode: both;\n          animation-timing-function: ease-in-out;\n        }\n\n        ::slotted([fade-in].animate-forward.animate-in) {\n          animation-name: slidem-fade-in;\n        }\n\n\n        ::slotted([fade-in].animate-backward.animate-out) {\n          animation-name: slidem-fade-out;\n          z-index: 3;\n        }\n\n        ::slotted([fade-out].animate-forward.animate-out) {\n          animation-name: slidem-fade-out;\n          z-index: 3;\n        }\n\n        ::slotted([fade-out].animate-backward.animate-in) {\n          animation-name: slidem-fade-in;\n        }\n\n        ::slotted([slide-in].animate-forward.animate-in) {\n          animation-name: slidem-slide-in-in;\n        }\n        ::slotted([slide-in].animate-backward.animate-out) {\n          animation-name: slidem-slide-in-out;\n          z-index: 3;\n        }\n\n        ::slotted([slide-out].animate-forward.animate-out) {\n          animation-name: slidem-slide-out-in;\n          z-index: 3;\n        }\n        ::slotted([slide-out].animate-backward.animate-in) {\n          animation-name: slidem-slide-out-out;\n        }\n      </style>\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.slides = Array.from(this.children);\n    this.slides.forEach(slide => {\n      this.$.progress.appendChild(document.createElement('div'));\n    });\n\n    onRouteChange(() => {\n      this.slides[this.currentSlide].step = this.currentStep + 1;\n      this.slides[this.currentSlide].setAttribute('active', '');\n      this.slides[this.currentSlide].classList.add('animate-in');\n\n      if (this.previousSlide === this.currentSlide) {\n        return;\n      }\n\n      if (this.previousSlide !== undefined) {\n        if (this.previousSlide < this.currentSlide) {\n          this.slides[this.previousSlide].classList.add('animate-forward');\n          this.slides[this.currentSlide].classList.add('animate-forward');\n          this.slides[this.previousSlide].classList.remove('animate-backward');\n          this.slides[this.currentSlide].classList.remove('animate-backward');\n        } else {\n          this.slides[this.previousSlide].classList.add('animate-backward');\n          this.slides[this.currentSlide].classList.add('animate-backward');\n          this.slides[this.previousSlide].classList.remove('animate-forward');\n          this.slides[this.currentSlide].classList.remove('animate-forward');\n        }\n      }\n\n      if (this.fadeOutSlide !== undefined) {\n        this.slides[this.fadeOutSlide].classList.remove('animate-out');\n        if (this.fadeOutSlide !== this.currentSlide) {\n          this.slides[this.fadeOutSlide].removeAttribute('active');\n        }\n      }\n\n      if (this.previousSlide !== undefined) {\n        this.slides[this.previousSlide].classList.remove('animate-in');\n        this.slides[this.previousSlide].classList.add('animate-out');\n        this.$.progress.children[this.previousSlide].classList.remove('active');\n        this.fadeOutSlide = this.previousSlide;\n      }\n\n      this.$.progress.children[this.currentSlide].classList.add('active');\n\n      this.previousSlide = this.currentSlide;\n    });\n\n    this.$.forward.onclick = () => {\n      if (this.slides[this.currentSlide].steps && this.slides[this.currentSlide].step <= this.slides[this.currentSlide].steps) {\n        window.history.pushState({}, '', `${currentPath()}#slide-${this.currentSlide + 1}/step-${this.slides[this.currentSlide].step + 1}`);\n        window.dispatchEvent(new Event('location-changed'));\n      } else if (this.currentSlide < this.slides.length - 1) {\n        window.history.pushState({}, '', `${currentPath()}#slide-${this.currentSlide + 2}/step-1`);\n        window.dispatchEvent(new Event('location-changed'));\n      }\n    };\n\n    this.$.backward.onclick = () => {\n      if (this.slides[this.currentSlide].steps && this.slides[this.currentSlide].step > 1) {\n        window.history.pushState({}, '', `${currentPath()}#slide-${this.currentSlide + 1}/step-${this.slides[this.currentSlide].step - 1}`);\n        window.dispatchEvent(new Event('location-changed'));\n      } else if (this.currentSlide > 0) {\n        if (this.slides[this.currentSlide - 1].steps) {\n          window.history.pushState({}, '', `${currentPath()}#slide-${this.currentSlide}/step-${this.slides[this.currentSlide - 1].steps + 1}`);\n        } else {\n          window.history.pushState({}, '', `${currentPath()}#slide-${this.currentSlide}/step-1`);\n        }\n        window.dispatchEvent(new Event('location-changed'));\n      }\n    };\n\n    let touchX;\n    let touchY;\n    document.addEventListener(\n      'touchstart',\n      e => {\n        touchX = e.touches[0].clientX;\n        touchY = e.touches[0].clientY;\n      },\n      false\n    );\n    document.addEventListener(\n      'touchend',\n      e => {\n        const xMove = e.changedTouches[0].clientX - touchX;\n        const yMove = e.changedTouches[0].clientY - touchY;\n        if (Math.abs(xMove) > 60 && Math.abs(xMove) > Math.abs(yMove)) {\n          if (xMove < 0) {\n            this.$.forward.onclick();\n          } else {\n            this.$.backward.onclick();\n          }\n        }\n      },\n      false\n    );\n\n    this.removeAttribute('loading');\n\n    const init = () => {\n      window.requestAnimationFrame(() => window.dispatchEvent(new Event('location-changed')));\n    };\n\n    const font = this.getAttribute('font');\n    if (font) {\n      this.style.fontFamily = font;\n    }\n\n    Promise.all(\n      this.slides\n        .filter(slide => slide.fonts)\n        .map(slide => slide.fonts)\n        .reduce((fonts, slideFonts) => fonts.concat(slideFonts), (font && [font]) || [])\n        .map(font => new FontFaceObserver(font).load())\n    ).then(init, init);\n  }\n\n  get currentSlide() {\n    return (currentHash().match(/(?:slide-(\\d+))?(?:\\/step-(\\d+|Infinity))?/)[1] || 1) - 1;\n  }\n  get currentStep() {\n    return (currentHash().match(/(?:slide-(\\d+))?(?:\\/step-(\\d+|Infinity))?/)[2] || 1) - 1;\n  }\n}\n\ncustomElements.define(SlidemDeck.is, SlidemDeck);\n"],"file":"slidem-deck.js"}